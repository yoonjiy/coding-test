package dp;
class Pro_level3_1832 {
    int MOD = 20170805;
    int[][][] dp;
    public int solution(int m, int n, int[][] cityMap) {
        int answer = 0;
        //왼쪽 위의 출발점에서 오른쪽 아래 도착점까지 자동차로 이동 가능한 전체 가능한 경로 수를 출력하는 프로그램을 작성하라
        dp = new int[m+1][n+1][2]; //0-아래로 1-오른쪽으로 이동
        
        dp[1][1][0] = dp[1][1][1] = 1;
        for(int r=1; r<=m; r++){
            for(int c=1; c<=n; c++){
                if(cityMap[r-1][c-1]==0){
                    dp[r][c][0] += (dp[r-1][c][0]+dp[r][c-1][1])%MOD;
                    dp[r][c][1] += (dp[r-1][c][0]+dp[r][c-1][1])%MOD;
                }
                else if(cityMap[r-1][c-1]==1){
                    //통행이 금지된 지점
                    dp[r][c][0] = 0;
                    dp[r][c][1] = 0;
                }
                else{
                    dp[r][c][0] += dp[r-1][c][0]%MOD;
                    dp[r][c][1] += dp[r][c-1][1]%MOD;
                }
            }
        }
        return dp[m][n][0];
    }
}