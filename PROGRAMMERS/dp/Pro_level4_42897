package dp;
class Pro_level4_42897 {
    public int solution(int[] money) {
        int answer = 0;
        // money가 주어질 때, 도둑이 훔칠 수 있는 돈의 최댓값을 return
        
        //dp[i] = 도둑이 i번째 집에 왔을 때 훔칠 수 있는 돈의 최댓값
        int[] dp = new int[money.length];
        
        //첫번째 집을 터는 경우
        dp[0] = dp[1] = money[0];
        for(int i=2; i<money.length-1; i++){
            //i번째 집을 터는 경우, 안터는 경우
             dp[i] = Math.max(dp[i-2]+money[i], dp[i-1]);
        }
        answer = dp[money.length-2];
        
        //첫번째 집을 안터는 경우
        dp[0] = 0;
        dp[1] = money[1];
        for(int i=2; i<money.length; i++){
            dp[i] = Math.max(dp[i-2]+money[i], dp[i-1]);
        }
        
        answer = Math.max(answer, dp[money.length-1]);
        
        return answer;
    }
}